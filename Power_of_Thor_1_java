import java.util.*;
import java.io.*;
import java.math.*;
import java.util.Arrays;
import java.util.List;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 * ---
 * Hint: You can use the debug stream to print initialTX and initialTY, if Thor seems not follow your orders.
 **/



class Player {

    public static void main(String args[]) {
        Scanner in = new Scanner(System.in);
        int lightX = in.nextInt(); // the X position of the light of power
        int lightY = in.nextInt(); // the Y position of the light of power
        int initialTx = in.nextInt(); // Thor's starting X position
        int initialTy = in.nextInt(); // Thor's starting Y position
        String x = "";
        List arrayList = new ArrayList();
        // game loop
        while (true) {
            int remainingTurns = in.nextInt(); // The remaining amount of turns Thor can move. Do not remove this line.

            // Write an action using System.out.println()
            // To debug: System.err.println("Debug messages...");
            arrayList = position_find(initialTx, initialTy, lightX, lightY);
            initialTx = (int)arrayList.get(1);
            initialTy = (int)arrayList.get(2);
            System.err.println(arrayList.get(2));
            // A single line providing the move to be made: N NE E SE S SW W or NW
            System.out.println((String)arrayList.get(0));
        }
    }
    public static List position_find(int tx, int ty, int lx, int ly) {
        String x = "" ;
            if (ty > ly) {
                if (tx == lx){
                    x = "N";
                }
                else if(tx < lx){
                    x = "NE";
                    tx += 1;
                }
                else {
                    x = "NW";
                    tx -= 1;
                }
                ty -= 1;
            }

            else if(ty < ly) {
                if (tx == lx){
                    x = "S";
                }
                else if(tx < lx){
                    x = "SE";
                    tx += 1;
                }
                else {
                    x = "SW";
                    tx -= 1;
                }
                ty += 1;
            }

            else {
                if (tx < lx) {
                    x = "E";
                    tx += 1;
                }

                else {
                    x = "W";
                    tx -= 1;
                } 
            }
        return Arrays.asList(x, tx, ty);
        }
}

